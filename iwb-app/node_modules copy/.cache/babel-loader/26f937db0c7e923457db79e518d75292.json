{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const InvestorDashboard=()=>{const[incomeStatements,setIncomeStatements]=useState([]);const[error,setError]=useState(null);// Fetch the income statements from the backend\nuseEffect(()=>{const fetchIncomeStatements=async()=>{try{const response=await axios.get('http://localhost:5000/api/income');// Replace with correct endpoint\nsetIncomeStatements(response.data);// Assuming response.data contains the list of income statements\n}catch(err){setError('Failed to fetch income statements');console.error(err);}};fetchIncomeStatements();},[]);// Empty dependency array means it runs once when the component mounts\nconst styles={container:{fontFamily:'Arial, sans-serif',padding:'20px',backgroundColor:'#f4f4f4',minHeight:'100vh'},title:{fontSize:'2em',color:'#333',marginBottom:'20px',textAlign:'center'},error:{color:'red',marginBottom:'10px'},tableContainer:{backgroundColor:'#fff',borderRadius:'8px',boxShadow:'0 2px 4px rgba(0, 0, 0, 0.1)',overflowX:'auto'},table:{width:'100%',borderCollapse:'collapse'},tableHeader:{backgroundColor:'#007bff',color:'#fff',fontWeight:'bold',padding:'12px 15px',textAlign:'left'},tableRow:{borderBottom:'1px solid #ddd'},tableCell:{padding:'10px 15px',textAlign:'left'},noData:{padding:'20px',textAlign:'center',fontStyle:'italic',color:'#777'}};return/*#__PURE__*/_jsxs(\"div\",{style:styles.container,children:[/*#__PURE__*/_jsx(\"h2\",{style:styles.title,children:\"Investor Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome, Investor. Here you can view investment details and income statements.\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:styles.error,children:error}),/*#__PURE__*/_jsx(\"h3\",{children:\"Income Statements\"}),incomeStatements.length===0?/*#__PURE__*/_jsx(\"p\",{style:styles.noData,children:\"No income statements available.\"}):/*#__PURE__*/_jsx(\"div\",{style:styles.tableContainer,children:/*#__PURE__*/_jsxs(\"table\",{style:styles.table,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:styles.tableHeader,children:\"Month\"}),/*#__PURE__*/_jsx(\"th\",{style:styles.tableHeader,children:\"Year\"}),/*#__PURE__*/_jsx(\"th\",{style:styles.tableHeader,children:\"Total Sales\"}),/*#__PURE__*/_jsx(\"th\",{style:styles.tableHeader,children:\"Total Expenses\"}),/*#__PURE__*/_jsx(\"th\",{style:styles.tableHeader,children:\"Net Income\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:incomeStatements.map(statement=>/*#__PURE__*/_jsxs(\"tr\",{style:styles.tableRow,children:[/*#__PURE__*/_jsx(\"td\",{style:styles.tableCell,children:statement.month}),/*#__PURE__*/_jsx(\"td\",{style:styles.tableCell,children:statement.year}),/*#__PURE__*/_jsx(\"td\",{style:styles.tableCell,children:statement.totalSales}),/*#__PURE__*/_jsx(\"td\",{style:styles.tableCell,children:statement.totalExpenses}),/*#__PURE__*/_jsx(\"td\",{style:styles.tableCell,children:statement.netIncome})]},statement._id))})]})})]});};export default InvestorDashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","InvestorDashboard","incomeStatements","setIncomeStatements","error","setError","fetchIncomeStatements","response","get","data","err","console","styles","container","fontFamily","padding","backgroundColor","minHeight","title","fontSize","color","marginBottom","textAlign","tableContainer","borderRadius","boxShadow","overflowX","table","width","borderCollapse","tableHeader","fontWeight","tableRow","borderBottom","tableCell","noData","fontStyle","style","children","length","map","statement","month","year","totalSales","totalExpenses","netIncome","_id"],"sources":["C:/Users/Huawei/Desktop/IBW Group/iwb-app/src/pages/InvestorDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst InvestorDashboard = () => {\r\n    const [incomeStatements, setIncomeStatements] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Fetch the income statements from the backend\r\n    useEffect(() => {\r\n        const fetchIncomeStatements = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/income'); // Replace with correct endpoint\r\n                setIncomeStatements(response.data); // Assuming response.data contains the list of income statements\r\n            } catch (err) {\r\n                setError('Failed to fetch income statements');\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        fetchIncomeStatements();\r\n    }, []); // Empty dependency array means it runs once when the component mounts\r\n\r\n    const styles = {\r\n        container: {\r\n            fontFamily: 'Arial, sans-serif',\r\n            padding: '20px',\r\n            backgroundColor: '#f4f4f4',\r\n            minHeight: '100vh',\r\n        },\r\n        title: {\r\n            fontSize: '2em',\r\n            color: '#333',\r\n            marginBottom: '20px',\r\n            textAlign: 'center',\r\n        },\r\n        error: {\r\n            color: 'red',\r\n            marginBottom: '10px',\r\n        },\r\n        tableContainer: {\r\n            backgroundColor: '#fff',\r\n            borderRadius: '8px',\r\n            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n            overflowX: 'auto',\r\n        },\r\n        table: {\r\n            width: '100%',\r\n            borderCollapse: 'collapse',\r\n        },\r\n        tableHeader: {\r\n            backgroundColor: '#007bff',\r\n            color: '#fff',\r\n            fontWeight: 'bold',\r\n            padding: '12px 15px',\r\n            textAlign: 'left',\r\n        },\r\n        tableRow: {\r\n            borderBottom: '1px solid #ddd',\r\n        },\r\n        tableCell: {\r\n            padding: '10px 15px',\r\n            textAlign: 'left',\r\n        },\r\n        noData: {\r\n            padding: '20px',\r\n            textAlign: 'center',\r\n            fontStyle: 'italic',\r\n            color: '#777',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <h2 style={styles.title}>Investor Dashboard</h2>\r\n            <p>Welcome, Investor. Here you can view investment details and income statements.</p>\r\n\r\n            {/* Error handling */}\r\n            {error && <p style={styles.error}>{error}</p>}\r\n\r\n            {/* Display income statements */}\r\n            <h3>Income Statements</h3>\r\n            {incomeStatements.length === 0 ? (\r\n                <p style={styles.noData}>No income statements available.</p>\r\n            ) : (\r\n                <div style={styles.tableContainer}>\r\n                    <table style={styles.table}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={styles.tableHeader}>Month</th>\r\n                                <th style={styles.tableHeader}>Year</th>\r\n                                <th style={styles.tableHeader}>Total Sales</th>\r\n                                <th style={styles.tableHeader}>Total Expenses</th>\r\n                                <th style={styles.tableHeader}>Net Income</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {incomeStatements.map((statement) => (\r\n                                <tr key={statement._id} style={styles.tableRow}>\r\n                                    <td style={styles.tableCell}>{statement.month}</td>\r\n                                    <td style={styles.tableCell}>{statement.year}</td>\r\n                                    <td style={styles.tableCell}>{statement.totalSales}</td>\r\n                                    <td style={styles.tableCell}>{statement.totalExpenses}</td>\r\n                                    <td style={styles.tableCell}>{statement.netIncome}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InvestorDashboard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAExC;AACAC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAW,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,kCAAkC,CAAC,CAAE;AACtEL,mBAAmB,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAE;AACxC,CAAE,MAAOC,GAAG,CAAE,CACVL,QAAQ,CAAC,mCAAmC,CAAC,CAC7CM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC,CACtB,CACJ,CAAC,CAEDJ,qBAAqB,CAAC,CAAC,CAC3B,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAM,MAAM,CAAG,CACXC,SAAS,CAAE,CACPC,UAAU,CAAE,mBAAmB,CAC/BC,OAAO,CAAE,MAAM,CACfC,eAAe,CAAE,SAAS,CAC1BC,SAAS,CAAE,OACf,CAAC,CACDC,KAAK,CAAE,CACHC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,MAAM,CACbC,YAAY,CAAE,MAAM,CACpBC,SAAS,CAAE,QACf,CAAC,CACDlB,KAAK,CAAE,CACHgB,KAAK,CAAE,KAAK,CACZC,YAAY,CAAE,MAClB,CAAC,CACDE,cAAc,CAAE,CACZP,eAAe,CAAE,MAAM,CACvBQ,YAAY,CAAE,KAAK,CACnBC,SAAS,CAAE,8BAA8B,CACzCC,SAAS,CAAE,MACf,CAAC,CACDC,KAAK,CAAE,CACHC,KAAK,CAAE,MAAM,CACbC,cAAc,CAAE,UACpB,CAAC,CACDC,WAAW,CAAE,CACTd,eAAe,CAAE,SAAS,CAC1BI,KAAK,CAAE,MAAM,CACbW,UAAU,CAAE,MAAM,CAClBhB,OAAO,CAAE,WAAW,CACpBO,SAAS,CAAE,MACf,CAAC,CACDU,QAAQ,CAAE,CACNC,YAAY,CAAE,gBAClB,CAAC,CACDC,SAAS,CAAE,CACPnB,OAAO,CAAE,WAAW,CACpBO,SAAS,CAAE,MACf,CAAC,CACDa,MAAM,CAAE,CACJpB,OAAO,CAAE,MAAM,CACfO,SAAS,CAAE,QAAQ,CACnBc,SAAS,CAAE,QAAQ,CACnBhB,KAAK,CAAE,MACX,CACJ,CAAC,CAED,mBACIpB,KAAA,QAAKqC,KAAK,CAAEzB,MAAM,CAACC,SAAU,CAAAyB,QAAA,eACzBxC,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACM,KAAM,CAAAoB,QAAA,CAAC,oBAAkB,CAAI,CAAC,cAChDxC,IAAA,MAAAwC,QAAA,CAAG,gFAA8E,CAAG,CAAC,CAGpFlC,KAAK,eAAIN,IAAA,MAAGuC,KAAK,CAAEzB,MAAM,CAACR,KAAM,CAAAkC,QAAA,CAAElC,KAAK,CAAI,CAAC,cAG7CN,IAAA,OAAAwC,QAAA,CAAI,mBAAiB,CAAI,CAAC,CACzBpC,gBAAgB,CAACqC,MAAM,GAAK,CAAC,cAC1BzC,IAAA,MAAGuC,KAAK,CAAEzB,MAAM,CAACuB,MAAO,CAAAG,QAAA,CAAC,iCAA+B,CAAG,CAAC,cAE5DxC,IAAA,QAAKuC,KAAK,CAAEzB,MAAM,CAACW,cAAe,CAAAe,QAAA,cAC9BtC,KAAA,UAAOqC,KAAK,CAAEzB,MAAM,CAACe,KAAM,CAAAW,QAAA,eACvBxC,IAAA,UAAAwC,QAAA,cACItC,KAAA,OAAAsC,QAAA,eACIxC,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACkB,WAAY,CAAAQ,QAAA,CAAC,OAAK,CAAI,CAAC,cACzCxC,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACkB,WAAY,CAAAQ,QAAA,CAAC,MAAI,CAAI,CAAC,cACxCxC,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACkB,WAAY,CAAAQ,QAAA,CAAC,aAAW,CAAI,CAAC,cAC/CxC,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACkB,WAAY,CAAAQ,QAAA,CAAC,gBAAc,CAAI,CAAC,cAClDxC,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACkB,WAAY,CAAAQ,QAAA,CAAC,YAAU,CAAI,CAAC,EAC9C,CAAC,CACF,CAAC,cACRxC,IAAA,UAAAwC,QAAA,CACKpC,gBAAgB,CAACsC,GAAG,CAAEC,SAAS,eAC5BzC,KAAA,OAAwBqC,KAAK,CAAEzB,MAAM,CAACoB,QAAS,CAAAM,QAAA,eAC3CxC,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACsB,SAAU,CAAAI,QAAA,CAAEG,SAAS,CAACC,KAAK,CAAK,CAAC,cACnD5C,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACsB,SAAU,CAAAI,QAAA,CAAEG,SAAS,CAACE,IAAI,CAAK,CAAC,cAClD7C,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACsB,SAAU,CAAAI,QAAA,CAAEG,SAAS,CAACG,UAAU,CAAK,CAAC,cACxD9C,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACsB,SAAU,CAAAI,QAAA,CAAEG,SAAS,CAACI,aAAa,CAAK,CAAC,cAC3D/C,IAAA,OAAIuC,KAAK,CAAEzB,MAAM,CAACsB,SAAU,CAAAI,QAAA,CAAEG,SAAS,CAACK,SAAS,CAAK,CAAC,GALlDL,SAAS,CAACM,GAMf,CACP,CAAC,CACC,CAAC,EACL,CAAC,CACP,CACR,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAA9C,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}